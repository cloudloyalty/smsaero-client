name: test

on:
  push:
    branches:
    tags:
  pull_request:

env:
  DEFAULT_COMPOSER_FLAGS: "--prefer-dist --no-interaction --no-ansi --no-progress --no-suggest"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        php: [7.2, 7.3, 7.4, 8.0, 8.1, 8.2, 8.3]
        os: [ubuntu-latest]
        env: ['low', 'high']
    name: PHP ${{ matrix.php }} Test ${{ matrix.env }} on ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: json, mbstring
        ini-values: zend.assertions=1, assert.exception=1, error_reporting=E_ALL
        coverage: none

    - name: Validate composer.json
      run: composer validate

    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ matrix.env }}-${{ hashFiles('**/composer.json') }}
        restore-keys: ${{ runner.os }}-composer-${{ matrix.env }}-

    - name: Composer update
      run: |
        if [ "$DEPENDENCIES" = 'high' ]; then
            composer update $DEFAULT_COMPOSER_FLAGS
        fi;
        if [ "$DEPENDENCIES" = 'low' ]; then
            composer update $DEFAULT_COMPOSER_FLAGS --prefer-lowest
            if [ "$PHP_VERSION" = '8' ] || [ "$PHP_VERSION" = '8.1' ] || [ "$PHP_VERSION" = '8.2' ] || [ "$PHP_VERSION" = '8.3' ]; then
                composer update $DEFAULT_COMPOSER_FLAGS --prefer-lowest --with-all-dependencies jms/serializer:^3.14
            fi;
        fi;
      env:
        DEPENDENCIES: ${{ matrix.env }}
        PHP_VERSION: ${{ matrix.php }}

    - name: Run phpunit
      run: ./vendor/bin/phpunit

    - name: Run phpstan
      run: ./vendor/bin/phpstan analyse
